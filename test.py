# -*- coding: utf-8 -*-
"""test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15AKzdy21XU8gq_ylptFrjq9G0r5hQik_
"""

import train
import trainingDatabase
import numpy as np
from sklearn.metrics import confusion_matrix
from scipy.spatial.distance import cdist
from skimage.measure import label, regionprops, moments, moments_central, moments_normalized, moments_hu
from skimage import io, exposure
import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle
import pickle

#Reading test.bmp and binarizing it
def testingImg(input_img):
  test_img = train.readFile(input_img)
  test_vis_img = train.visualizeImg(test_img)
  binary_test_img = train.binThreshold(test_img, 230)
  #Extracting the characters from test.bmp and their features
  test_Features = []
  num = 0
  test_class = []
  test_label = train.cca(binary_test_img)
  test_Features = train.storeFeatures(test_label, binary_test_img, test_Features, test_class, num)
  #Normalizing the features from test.bmp
  test_nFeatures = []
  test_Features_Array = np.array(test_Features)
  test_nFeatures = (test_Features_Array - trainingDatabase.ft_means) / trainingDatabase.ft_sds
  #Recognition on test data
  test_D = cdist(test_nFeatures, trainingDatabase.nFeatures)
  io.imshow(test_D)
  plt.title("Distance Matrix")
  io.show()

  D_index = np.argsort(test_D, axis=0)
  print(f'Number of components obtained for test image: {len(test_nFeatures)}')

  return D_index